server:
  port: 8081

spring:
  profiles:
    default: dev

---

spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:kalkulus}}
    username: ${JDBC_DATABASE_USERNAME:${PGUSER:postgres}}
    password: ${JDBC_DATABASE_PASSWORD:${PGPASSWORD:postgres}}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: false

  jwt:
    secret: 0d7d52d65f10a246d92b56dea7e705a7ede33c850448cc5ddfa083706dbfc165

---

spring:
  config:
    activate:
      on-profile: prod

  datasource:
    # Supports both Railway's DATABASE_URL and traditional JDBC URLs
    url: ${DATABASE_URL:${JDBC_DATABASE_URL:jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:kalkulus}}}
    username: ${JDBC_DATABASE_USERNAME:${PGUSER:postgres}}
    password: ${JDBC_DATABASE_PASSWORD:${PGPASSWORD:postgres}}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 60000
      initialization-fail-timeout: 60000
      leak-detection-threshold: 60000
      validation-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 600000

  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    connect-retries: 5
    connect-retries-interval: 10
    default-schema: public
    validate-on-migrate: false

---

spring:
  config:
    activate:
      on-profile: railway

  datasource:
    # Uses same DATABASE_URL approach as prod profile
    url: ${DATABASE_URL}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 60000
      initialization-fail-timeout: 60000
      leak-detection-threshold: 60000
      validation-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 600000

  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    connect-retries: 5
    connect-retries-interval: 10
    default-schema: public
    validate-on-migrate: false

# Global configuration for prod profile
jwt:
  secret: ${JWT_SECRET:0d7d52d65f10a246d92b56dea7e705a7ede33c850448cc5ddfa083706dbfc165}

cors:
  allowed-origins: ${FRONTEND_URL:${CORS_ALLOWED_ORIGINS:https://your-frontend.com}}

logging:
  level:
    com.timla: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    org.flywaydb: DEBUG
    com.zaxxer.hikari: DEBUG
    org.postgresql: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

server:
  port: ${PORT:8080}
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never
