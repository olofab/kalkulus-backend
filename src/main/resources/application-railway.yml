spring:
  datasource:
    url: jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
    username: ${PGUSER}
    password: ${PGPASSWORD}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    
jwt:
  secret: ${JWT_SECRET:0d7d52d65f10a246d92b56dea7e705a7ede33c850448cc5ddfa083706dbfc165}

cors:
  allowed-origins: ${FRONTEND_URL:http://localhost:3000}

logging:
  level:
    com.timla: INFO
    org.springframework.security: WARN
    org.flywaydb: INFO

# Logging Configuration for Production
logging:
  level:
    com.timla: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    org.flywaydb: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Server Configuration
server:
  port: ${PORT:8080}  # Railway automatically sets PORT
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# Application specific configuration
app:
  jwt:
    secret: ${JWT_SECRET:0d7d52d65f10a246d92b56dea7e705a7ede33c850448cc5ddfa083706dbfc165}
    expiration: 86400000  # 24 hours in milliseconds
  
# Management endpoints (for health checks)
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never
